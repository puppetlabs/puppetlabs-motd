name: "pr_test"

on: [push, pull_request]

jobs:
  LitmusAcceptance:
    env:
      PROVISION_SERVICE: https://facade-release-6f3kfepqcq-ew.a.run.app
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Ruby 2.7
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.7
    - name: Install gems
      run: bundle install
    - name: Provision test environment
      run: |
        cat <<EOF >> test_machines.json
        {
          "url" : "https://api.github.com/repos/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID",
          "VMs": [
            {
             "cloud": "gcp",
             "region": "europe-west1",
             "zone": "europe-west1-d",
             "images": ["centos-7-v20200618"]
            }
          ]
        }    
        EOF
        curl -X POST -H "Authorization:bearer ${{ secrets.token }}" $PROVISION_SERVICE/v1/provision --data @test_machines.json > inventory.yaml
    - name: Install agent
      uses: nick-invision/retry@v1
      with:
        timeout_minutes: 30
        max_attempts: 5
        retry_wait_seconds: 60
        command: bundle exec rake 'litmus:install_agent'
    - name: Install module
      run: bundle exec rake 'litmus:install_module'
    - name: Run acceptance tests
      run: bundle exec rake 'litmus:acceptance:parallel'
    - name: Remove test environment
      if: ${{ always() }}
      run: |
        uniqueid=$(cat inventory.yaml | grep -m 1 uuid | cut -d ':' -f 2 | tr -d ' ')
        cat <<EOF >> delete_resources.json
        {
          "uuid" : "$uniqueid"
        }
        EOF
        echo "Removing uuid"
        cat delete_resources.json
        curl -X DELETE -H "Authorization:bearer ${{ secrets.token }}" $PROVISION_SERVICE/v1/provision --data @delete_resources.json
  slack-workflow-status:
    if: always()
    name: Post Workflow Status To Slack
    needs:
      - LitmusAcceptance
    runs-on: ubuntu-latest
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@master
        with:
          # Required Input
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.SLACK_WEBHOOK}}
          # Optional Input
          channel: '#team-ia-bots'
          name: 'GABot'
